// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "10/25/2025 19:28:00"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module multModuloCa2 (
	A,
	B,
	RM,
	RC);
input 	[1:0] A;
input 	[1:0] B;
output 	[3:0] RM;
output 	[3:0] RC;

// Design Ports Information
// RM[0]	=>  Location: PIN_L5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// RM[1]	=>  Location: PIN_A7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// RM[2]	=>  Location: PIN_N4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// RM[3]	=>  Location: PIN_N6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// RC[0]	=>  Location: PIN_N9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// RC[1]	=>  Location: PIN_A8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// RC[2]	=>  Location: PIN_M6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// RC[3]	=>  Location: PIN_L7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[0]	=>  Location: PIN_M4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B[0]	=>  Location: PIN_K8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[1]	=>  Location: PIN_B10,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B[1]	=>  Location: PIN_N8,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \RM[0]~output_o ;
wire \RM[1]~output_o ;
wire \RM[2]~output_o ;
wire \RM[3]~output_o ;
wire \RC[0]~output_o ;
wire \RC[1]~output_o ;
wire \RC[2]~output_o ;
wire \RC[3]~output_o ;
wire \A[0]~input_o ;
wire \B[0]~input_o ;
wire \Mult0|mult_core|result[0]~0_combout ;
wire \B[1]~input_o ;
wire \A[1]~input_o ;
wire \Mult0|mult_core|result[1]~1_combout ;
wire \Mult0|mult_core|result[2]~2_combout ;
wire \Mult0|mult_core|result[3]~3_combout ;
wire \Mult1|mult_core|result[2]~0_combout ;
wire \Mult1|mult_core|result[3]~1_combout ;


// Location: IOOBUF_X14_Y0_N9
cycloneiv_io_obuf \RM[0]~output (
	.i(\Mult0|mult_core|result[0]~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\RM[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \RM[0]~output .bus_hold = "false";
defparam \RM[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X12_Y31_N2
cycloneiv_io_obuf \RM[1]~output (
	.i(\Mult0|mult_core|result[1]~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\RM[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \RM[1]~output .bus_hold = "false";
defparam \RM[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X10_Y0_N9
cycloneiv_io_obuf \RM[2]~output (
	.i(\Mult0|mult_core|result[2]~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\RM[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \RM[2]~output .bus_hold = "false";
defparam \RM[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X12_Y0_N2
cycloneiv_io_obuf \RM[3]~output (
	.i(\Mult0|mult_core|result[3]~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\RM[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \RM[3]~output .bus_hold = "false";
defparam \RM[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X20_Y0_N2
cycloneiv_io_obuf \RC[0]~output (
	.i(\Mult0|mult_core|result[0]~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\RC[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \RC[0]~output .bus_hold = "false";
defparam \RC[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X12_Y31_N9
cycloneiv_io_obuf \RC[1]~output (
	.i(\Mult0|mult_core|result[1]~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\RC[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \RC[1]~output .bus_hold = "false";
defparam \RC[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X12_Y0_N9
cycloneiv_io_obuf \RC[2]~output (
	.i(\Mult1|mult_core|result[2]~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\RC[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \RC[2]~output .bus_hold = "false";
defparam \RC[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X14_Y0_N2
cycloneiv_io_obuf \RC[3]~output (
	.i(\Mult1|mult_core|result[3]~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\RC[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \RC[3]~output .bus_hold = "false";
defparam \RC[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X8_Y0_N1
cycloneiv_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X22_Y0_N8
cycloneiv_io_ibuf \B[0]~input (
	.i(B[0]),
	.ibar(gnd),
	.o(\B[0]~input_o ));
// synopsys translate_off
defparam \B[0]~input .bus_hold = "false";
defparam \B[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X13_Y1_N8
cycloneiv_lcell_comb \Mult0|mult_core|result[0]~0 (
// Equation(s):
// \Mult0|mult_core|result[0]~0_combout  = (\A[0]~input_o  & \B[0]~input_o )

	.dataa(gnd),
	.datab(\A[0]~input_o ),
	.datac(gnd),
	.datad(\B[0]~input_o ),
	.cin(gnd),
	.combout(\Mult0|mult_core|result[0]~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mult0|mult_core|result[0]~0 .lut_mask = 16'hCC00;
defparam \Mult0|mult_core|result[0]~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X20_Y0_N8
cycloneiv_io_ibuf \B[1]~input (
	.i(B[1]),
	.ibar(gnd),
	.o(\B[1]~input_o ));
// synopsys translate_off
defparam \B[1]~input .bus_hold = "false";
defparam \B[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X24_Y31_N8
cycloneiv_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X13_Y1_N2
cycloneiv_lcell_comb \Mult0|mult_core|result[1]~1 (
// Equation(s):
// \Mult0|mult_core|result[1]~1_combout  = (\B[1]~input_o  & (\A[0]~input_o  $ (((\A[1]~input_o  & \B[0]~input_o ))))) # (!\B[1]~input_o  & (((\A[1]~input_o  & \B[0]~input_o ))))

	.dataa(\B[1]~input_o ),
	.datab(\A[0]~input_o ),
	.datac(\A[1]~input_o ),
	.datad(\B[0]~input_o ),
	.cin(gnd),
	.combout(\Mult0|mult_core|result[1]~1_combout ),
	.cout());
// synopsys translate_off
defparam \Mult0|mult_core|result[1]~1 .lut_mask = 16'h7888;
defparam \Mult0|mult_core|result[1]~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X13_Y1_N4
cycloneiv_lcell_comb \Mult0|mult_core|result[2]~2 (
// Equation(s):
// \Mult0|mult_core|result[2]~2_combout  = (\B[1]~input_o  & (\A[1]~input_o  & ((!\B[0]~input_o ) # (!\A[0]~input_o ))))

	.dataa(\B[1]~input_o ),
	.datab(\A[0]~input_o ),
	.datac(\A[1]~input_o ),
	.datad(\B[0]~input_o ),
	.cin(gnd),
	.combout(\Mult0|mult_core|result[2]~2_combout ),
	.cout());
// synopsys translate_off
defparam \Mult0|mult_core|result[2]~2 .lut_mask = 16'h20A0;
defparam \Mult0|mult_core|result[2]~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X13_Y1_N14
cycloneiv_lcell_comb \Mult0|mult_core|result[3]~3 (
// Equation(s):
// \Mult0|mult_core|result[3]~3_combout  = (\B[1]~input_o  & (\A[0]~input_o  & (\A[1]~input_o  & \B[0]~input_o )))

	.dataa(\B[1]~input_o ),
	.datab(\A[0]~input_o ),
	.datac(\A[1]~input_o ),
	.datad(\B[0]~input_o ),
	.cin(gnd),
	.combout(\Mult0|mult_core|result[3]~3_combout ),
	.cout());
// synopsys translate_off
defparam \Mult0|mult_core|result[3]~3 .lut_mask = 16'h8000;
defparam \Mult0|mult_core|result[3]~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X13_Y1_N24
cycloneiv_lcell_comb \Mult1|mult_core|result[2]~0 (
// Equation(s):
// \Mult1|mult_core|result[2]~0_combout  = (\B[1]~input_o  & ((\A[0]~input_o  & (!\A[1]~input_o )) # (!\A[0]~input_o  & (\A[1]~input_o  & !\B[0]~input_o )))) # (!\B[1]~input_o  & (((\A[1]~input_o  & \B[0]~input_o ))))

	.dataa(\B[1]~input_o ),
	.datab(\A[0]~input_o ),
	.datac(\A[1]~input_o ),
	.datad(\B[0]~input_o ),
	.cin(gnd),
	.combout(\Mult1|mult_core|result[2]~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mult1|mult_core|result[2]~0 .lut_mask = 16'h5828;
defparam \Mult1|mult_core|result[2]~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X13_Y1_N26
cycloneiv_lcell_comb \Mult1|mult_core|result[3]~1 (
// Equation(s):
// \Mult1|mult_core|result[3]~1_combout  = (\B[1]~input_o  & (\A[0]~input_o  & (!\A[1]~input_o ))) # (!\B[1]~input_o  & (((\A[1]~input_o  & \B[0]~input_o ))))

	.dataa(\B[1]~input_o ),
	.datab(\A[0]~input_o ),
	.datac(\A[1]~input_o ),
	.datad(\B[0]~input_o ),
	.cin(gnd),
	.combout(\Mult1|mult_core|result[3]~1_combout ),
	.cout());
// synopsys translate_off
defparam \Mult1|mult_core|result[3]~1 .lut_mask = 16'h5808;
defparam \Mult1|mult_core|result[3]~1 .sum_lutc_input = "datac";
// synopsys translate_on

assign RM[0] = \RM[0]~output_o ;

assign RM[1] = \RM[1]~output_o ;

assign RM[2] = \RM[2]~output_o ;

assign RM[3] = \RM[3]~output_o ;

assign RC[0] = \RC[0]~output_o ;

assign RC[1] = \RC[1]~output_o ;

assign RC[2] = \RC[2]~output_o ;

assign RC[3] = \RC[3]~output_o ;

endmodule
