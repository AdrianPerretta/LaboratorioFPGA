// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "10/31/2025 23:11:27"

// 
// Device: Altera EP3C120F780C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module FullAdder (
	A,
	B,
	CIN,
	S,
	COUT);
input 	A;
input 	B;
input 	CIN;
output 	S;
output 	COUT;

// Design Ports Information
// S	=>  Location: PIN_AC17,	 I/O Standard: 2.5 V,	 Current Strength: Default
// COUT	=>  Location: PIN_AF19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A	=>  Location: PIN_AG19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B	=>  Location: PIN_AD18,	 I/O Standard: 2.5 V,	 Current Strength: Default
// CIN	=>  Location: PIN_AG23,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \S~output_o ;
wire \COUT~output_o ;
wire \A~input_o ;
wire \CIN~input_o ;
wire \B~input_o ;
wire \S~0_combout ;
wire \COUT~0_combout ;


// Location: IOOBUF_X74_Y0_N23
cycloneiii_io_obuf \S~output (
	.i(\S~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S~output_o ),
	.obar());
// synopsys translate_off
defparam \S~output .bus_hold = "false";
defparam \S~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X83_Y0_N16
cycloneiii_io_obuf \COUT~output (
	.i(\COUT~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\COUT~output_o ),
	.obar());
// synopsys translate_off
defparam \COUT~output .bus_hold = "false";
defparam \COUT~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X72_Y0_N8
cycloneiii_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X81_Y0_N22
cycloneiii_io_ibuf \CIN~input (
	.i(CIN),
	.ibar(gnd),
	.o(\CIN~input_o ));
// synopsys translate_off
defparam \CIN~input .bus_hold = "false";
defparam \CIN~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X85_Y0_N8
cycloneiii_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X80_Y1_N8
cycloneiii_lcell_comb \S~0 (
// Equation(s):
// \S~0_combout  = \A~input_o  $ (\CIN~input_o  $ (\B~input_o ))

	.dataa(\A~input_o ),
	.datab(gnd),
	.datac(\CIN~input_o ),
	.datad(\B~input_o ),
	.cin(gnd),
	.combout(\S~0_combout ),
	.cout());
// synopsys translate_off
defparam \S~0 .lut_mask = 16'hA55A;
defparam \S~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X80_Y1_N2
cycloneiii_lcell_comb \COUT~0 (
// Equation(s):
// \COUT~0_combout  = (\A~input_o  & ((\CIN~input_o ) # (\B~input_o ))) # (!\A~input_o  & (\CIN~input_o  & \B~input_o ))

	.dataa(\A~input_o ),
	.datab(gnd),
	.datac(\CIN~input_o ),
	.datad(\B~input_o ),
	.cin(gnd),
	.combout(\COUT~0_combout ),
	.cout());
// synopsys translate_off
defparam \COUT~0 .lut_mask = 16'hFAA0;
defparam \COUT~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign S = \S~output_o ;

assign COUT = \COUT~output_o ;

endmodule
